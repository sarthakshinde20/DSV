import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import warnings
warnings.filterwarnings('ignore')


from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score
from sklearn.tree import plot_tree
from sklearn.tree import DecisionTreeClassifier
from sklearn.model_selection import GridSearchCV, RandomizedSearchCV
from sklearn.metrics import confusion_matrix 
from sklearn.metrics import classification_report 


df=pd.read_csv("iris.csv")
df.head(5)


df.shape


df.isnull().sum()


df.info()


df.describe().T


sns.boxplot(df['sepal.width'])
plt.show()


a=df.columns[0:-1]
for i in a:
    sns.boxplot(y=df[i])
    plt.show()
    
    

q1=df['sepal.width'].quantile(q=0.25)
q3=df['sepal.width'].quantile(q=0.75)
iqr=q3-q1


df=df[(df['sepal.width']>=q1-1.5*iqr) & (df['sepal.width']<=q3+1.5*iqr) ]
df.shape


sns.boxplot(df['sepal.width'])
plt.show()


Y=df['variety']
X=df.drop("variety",axis=1)
x_train,x_test,y_train,y_test=train_test_split(X,Y,train_size=0.33,random_state=1)
X.shape,Y.shape


dt = DecisionTreeClassifier(max_depth=3, min_samples_leaf=10, random_state=1 )
dt.fit(X,Y)


plt.figure(figsize=(10,6))
plot_tree(dt,filled=True)
plt.title("Decision tree trained on all the iris features")
plt.show()


dt = DecisionTreeClassifier(random_state=1)
dt.fit(x_train, y_train)
y_pred_train = dt.predict(x_train)
y_pred = dt.predict(x_test)
y_prob = dt.predict_proba(x_test)


print('Accuracy of Decision Tree-Train: ', accuracy_score(y_pred_train, y_train))
print('Accuracy of Decision Tree-Test: ', accuracy_score(y_pred, y_test))


y_train.shape,y_test.shape


print('confusion matrix of Decision Tree-Train: ', confusion_matrix(y_pred_train, y_train))
print('confusion matrix of Decision Tree-Test: ', confusion_matrix(y_pred, y_test))

